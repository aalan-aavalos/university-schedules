type Career @model @auth(rules: [{allow: private}, {allow: public, operations: [read]}]) {
  id: ID!
  career_name: String!
  level: String!
  four_month_periods: Int!
  subject: [Subject] @hasMany(indexName: "byCareer", fields: ["id"])
  student: [Student] @hasMany(indexName: "byCareer", fields: ["id"])
  areaID: ID! @index(name: "byArea")
}

type Area @model @auth(rules: [{allow: private}]) {
  id: ID!
  area_name: String!
  careers: [Career] @hasMany(indexName: "byArea", fields: ["id"])
  coordinators: [Coordinator] @hasMany(indexName: "byArea", fields: ["id"])
}

type Subject @model @auth(rules: [{allow: private}]) {
  id: ID!
  subject_name: String!
  schedule: AWSJSON
  four_month_period: Int!
  hours_per_teacher: Int!
  hours_per_student: Int!
  teacherID: ID @index(name: "byTeacher")
  careerID: ID! @index(name: "byCareer")
}

type Student @model @auth(rules: [{allow: private}, {allow: public, operations: [create]}]) {
  id: ID!
  student_name: String!
  student_email: AWSEmail!
  four_month_period: Int!
  careerID: ID! @index(name: "byCareer")
}

type Teacher @model @auth(rules: [{allow: private}]) {
  id: ID!
  teacher_name: String!
  teacher_email: AWSEmail!
  subjects: [Subject] @hasMany(indexName: "byTeacher", fields: ["id"])
}

type Coordinator @model @auth(rules: [{allow: private}]) {
  id: ID!
  coordinator_name: String!
  coordinator_email: AWSEmail!
  areaID: ID! @index(name: "byArea")
}
 